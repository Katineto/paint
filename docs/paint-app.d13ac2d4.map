{"version":3,"sources":["index.js"],"names":["canvas","document","getElementById","ctx","getContext","selectedTool","isDrawing","lastX","lastY","color","toolSize","lineCap","hue","strokeStyle","lineJoin","pen","rainbow","textTool","eraser","draw","e","lineWidth","beginPath","moveTo","lineTo","offsetX","offsetY","stroke","handleClasses","selectedElem","map","elem","id","console","log","classList","remove","add","addEventListener","textPrompt","colorInput","value","sizeSpan","sizeInput","selectPen","selectRainbow","text","prompt","font","fillText","handleTextInput","innerText","clear","clearCanvas","clearRect","width","height","downloadImage","data","toDataURL","href","download","loadImageURL","url","image","createElement","drawImage","src","handleLoad","load","files","length","reader","FileReader","result","readAsDataURL","window","onload"],"mappings":"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","file":"paint-app.d13ac2d4.map","sourceRoot":"..","sourcesContent":["const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nlet selectedTool = \"pen\";\nlet isDrawing = false;\nlet lastX = 0;\nlet lastY = 0;\nlet color = \"#8080ff\";\nlet toolSize = 20;\nlet lineCap = \"round\";\nlet hue = 70;\nctx.strokeStyle = color;\nctx.lineJoin = \"round\";\n\nconst pen = document.getElementById(\"pen\");\nconst rainbow = document.getElementById(\"rainbow\");\nconst textTool = document.getElementById(\"text\");\nconst eraser = document.getElementById(\"eraser\");\n\n// Main drawing functionality\nfunction draw(e) {\n  if (!isDrawing) return;\n  ctx.lineCap = lineCap;\n  ctx.lineWidth = toolSize;\n  if (selectedTool === \"pen\") {\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(e.offsetX, e.offsetY);\n    ctx.stroke();\n  }\n  if (selectedTool === \"rainbow\") {\n    ctx.strokeStyle = `hsl(${hue}, 50%, 50%)`;\n    ctx.beginPath();\n    ctx.moveTo(lastX, lastY);\n    ctx.lineTo(e.offsetX, e.offsetY);\n    ctx.stroke();\n\n    hue++;\n  }\n\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n}\n\ncanvas.addEventListener(\"mousemove\", draw);\ncanvas.addEventListener(\"mousedown\", e => {\n  isDrawing = true;\n  [lastX, lastY] = [e.offsetX, e.offsetY];\n  if (selectedTool === \"text\") {\n    textPrompt();\n  }\n});\ncanvas.addEventListener(\"mouseup\", () => (isDrawing = false));\ncanvas.addEventListener(\"mouseout\", () => (isDrawing = false));\n\nfunction handleClasses(selectedElem) {\n  const elements = [pen, textTool, eraser, rainbow];\n  elements.map(elem => {\n    if (elem.id !== selectedElem.id) {\n      console.log(\"something\");\n      elem.classList.remove(\"selected\");\n      elem.classList.add(\"not-selected\");\n    }\n    selectedElem.classList.remove(\"not-selected\");\n    selectedElem.classList.add(\"selected\");\n  });\n}\n\n// Handle color selection\nconst colorInput = document.getElementById(\"color\");\ncolorInput.addEventListener(\"change\", () => {\n  color = colorInput.value;\n});\n\n// Handle pen width\nconst sizeSpan = document.getElementById(\"size\");\nconst sizeInput = document.getElementById(\"tool-size\");\nsizeInput.addEventListener(\"change\", () => {\n  toolSize = sizeInput.value;\n  sizeSpan.innerText = sizeInput.value;\n});\n\n// Select pen\nfunction selectPen() {\n  handleClasses(pen);\n  color = colorInput.value;\n  selectedTool = \"pen\";\n}\npen.addEventListener(\"click\", selectPen);\n\n//Select rainbow\nrainbow.addEventListener(\"click\", selectRainbow);\nfunction selectRainbow() {\n  handleClasses(rainbow);\n  selectedTool = \"rainbow\";\n}\n\n// Text tool\nfunction textPrompt() {\n  const text = prompt(\"Enter your text:\", \"\");\n  if (!text) return;\n  ctx.font = `${sizeInput.value}px sans-serif`;\n  ctx.fillText(text, lastX, lastY);\n}\nfunction handleTextInput() {\n  handleClasses(textTool);\n  selectedTool = \"text\";\n}\ntextTool.addEventListener(\"click\", handleTextInput);\n\n// Select eraser\neraser.addEventListener(\"click\", () => {\n  handleClasses(eraser);\n  selectedTool = \"pen\";\n  color = \"#fff\";\n});\n\n// Handle clearing the canvas\nconst clear = document.getElementById(\"clear\");\nfunction clearCanvas() {\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  canvas.width = 800;\n  canvas.height = 800;\n}\nclear.addEventListener(\"click\", clearCanvas);\n\n// Handle saving the picture\nfunction downloadImage(e) {\n  try {\n    const data = ctx.canvas.toDataURL(\"image/png\");\n    this.href = data;\n  } catch (e) {\n    console.log(e); // Possible security error?\n  }\n}\nconst download = document.getElementById(\"download\");\ndownload.addEventListener(\"click\", downloadImage);\n\n// Handle loading image from user\nfunction loadImageURL(url) {\n  const image = document.createElement(\"img\");\n  image.addEventListener(\"load\", function() {\n    ctx.canvas.width = image.width;\n    ctx.canvas.height = image.height;\n    ctx.drawImage(image, 0, 0);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = toolSize;\n  });\n  image.src = url;\n}\nfunction handleLoad() {\n  if (load.files.length === 0) return;\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => {\n    loadImageURL(reader.result);\n  });\n  reader.readAsDataURL(load.files[0]);\n}\nconst load = document.getElementById(\"load\");\nload.addEventListener(\"change\", handleLoad);\n\n// Set color and pen width from current inputs\nwindow.onload = function() {\n  color = colorInput.value;\n  toolSize = sizeInput.value;\n  load.value = \"\";\n  sizeSpan.innerText = sizeInput.value;\n};\n"]}